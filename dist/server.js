/*! angular-seed-sj 2013-05-22 */function ensureAuthentication(e,s,r){return e.user?r():s.send(401)}var port=1338,express=require("express"),bcrypt=require("bcrypt-nodejs"),handlers=require("./node/handlers"),passport=require("passport"),LocalStrategy=require("passport-local").Strategy,fs=require("fs"),http=require("http");passport.serializeUser(function(e,s){s(null,e._id)}),passport.deserializeUser(function(e,s){handlers.findById(e,function(e,r){s(e,r)})}),passport.use(new LocalStrategy(function(e,s,r){console.log("Auth: ",e,s),handlers.findByUsername(e,function(e,a){return e?r(e):a?bcrypt.compareSync(s,a.password)?r(null,a):r(null,!1,{errPassword:!0}):r(null,!1,{errUser:!0})})}));var app=express();app.use(express.static(__dirname+"/app")),app.use(express.cookieParser()),app.use(express.session({secret:"keyboard cat"})),app.use(passport.initialize()),app.use(passport.session()),app.use(express.bodyParser()),app.get("/favicon.ico",function(e,s){s.send(404)}),app.get("/api/test1",handlers.test1),app.get("/api/user",ensureAuthentication,handlers.userInfo),app.get("/api/user/fname/:fname",handlers.findUserByFname),app.get("/api/user/age/:age",handlers.findUserByAge),app.get("/api/user/logout",handlers.userLogout),app.get("/api/user/delete",handlers.userDelete),app.get("/api/user/clear",handlers.clearDatabase),app.post("/api/user/login",function(e,s,r){passport.authenticate("local",function(a,p,n){return a?r(a):p?(e.login(p,function(e){return e?r(e):(console.log("User logged in"),s.send(200,{username:p.username}))}),void 0):s.send(401,n)})(e,s,r)}),app.get("/api/user/checkSession",ensureAuthentication,handlers.checkSession),app.get("*",handlers.index),app.post("/api/user/create",handlers.createUser),app.listen(port),console.log("Listening on port %d.",port);