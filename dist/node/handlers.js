/*! angular-seed-sj 2013-05-22 */function clearDatabase(e,n){db_connector.collection("users",function(e,s){console.log("removing"),s.remove(),n.send(200)})}function findById(e,n){console.log("Finding by ID"),db_connector.collection("users",function(s,o){o.find({_id:ObjectID(e)}).toArray(function(s,o){return s?n(s):o.length>0?n(null,o[0]):n(Error("User "+e+" does not exist"))})})}function findByUsername(e,n){console.log("Finding by Username"),db_connector.collection("users",function(s,o){o.find({username:e}).toArray(function(e,s){return e?n(e):s.length>0?n(null,s[0]):n(null,null)})})}function index(e,n){console.log("Sending index.html (%s)",e.url),n.sendfile("app/index.html")}function test1(e,n){console.log("sending test1"),console.log(e.id),n.send("test1")}function allUsers(e,n){db_connector.collection("users",function(e,s){s.find().toArray(function(e,s){n.send(s)})})}function findUserByFname(e,n){var s=e.params.fname;db_connector.collection("users",function(e,o){o.find({fname:s}).toArray(function(e,s){n.send(s)})})}function findUserByAge(e,n){var s=parseInt(e.params.age);db_connector.collection("users",function(e,o){o.find({age:s}).toArray(function(e,s){n.send(s)})})}function userLogout(e,n){e.logout(),n.send(200)}function userInfo(e,n){n.send(e.user)}function userDelete(e,n){db_connector.collection("users",function(s,o){o.remove({id:e.user.id},function(s){s?(console.log("error here: "+s),n.send({message:"Failed to delete user"},401)):(e.logout(),n.send(200))})})}function createUser(e,n){var s=bcrypt.genSaltSync(),o=bcrypt.hashSync(e.body.password,s);db_connector.collection("users",function(s,r){r.insert({username:e.body.username,password:o,id:e.body.username.toUpperCase()},{safe:!0},function(e,s){e?n.send("Username already exists!!!",401):(console.log("Data added as "+s[0].id),n.send(s[0]))})})}function checkSession(e,n){n.send(200)}var mongodb=require("mongodb"),mongoserver=new mongodb.Server("localhost",mongodb.Connection.DEFAULT_PORT,{"auto-reconnect":!0}),ObjectID=require("mongodb").ObjectID,db_connector=new mongodb.Db("test1",mongoserver,{safe:!1,strict:!0}),bcrypt=require("bcrypt-nodejs");db_connector.open(function(e,n){e||(console.log("Connected to test 1!"),n.collection("users",{strict:!0},function(e){e&&(console.log("The users collection doesn't exist.  Creating it now."),populateDB()),n.ensureIndex("users",{id:1},{unique:!0,dropDups:!0},function(){})}))});var populateDB=function(){var e=[{fname:"Steven",lname:"Cipriano",password:"testpw",age:24},{fname:"Jon",lname:"Levy",password:"bettertest",age:24}];db_connector.createCollection("users",{strict:!0},function(n,s){n?console.log(n):s.insert(e,{strict:!0},function(){})})};exports.clearDatabase=clearDatabase,exports.findById=findById,exports.findByUsername=findByUsername,exports.index=index,exports.test1=test1,exports.allUsers=allUsers,exports.findUserByFname=findUserByFname,exports.findUserByAge=findUserByAge,exports.userLogout=userLogout,exports.userInfo=userInfo,exports.userDelete=userDelete,exports.createUser=createUser,exports.checkSession=checkSession;